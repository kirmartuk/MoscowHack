"""empty message

Revision ID: 23e2e2957750
Revises: 06fb81bcdd17
Create Date: 2020-10-31 14:33:55.300935

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '23e2e2957750'
down_revision = '06fb81bcdd17'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('moving',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('act', sa.String(length=63), nullable=False),
    sa.Column('date', sa.String(length=31), nullable=False),
    sa.Column('reason', sa.String(length=63), nullable=False),
    sa.Column('contract', sa.String(length=63), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_moving_act'), 'moving', ['act'], unique=False)
    op.create_index(op.f('ix_moving_contract'), 'moving', ['contract'], unique=False)
    op.create_index(op.f('ix_moving_date'), 'moving', ['date'], unique=False)
    op.create_index(op.f('ix_moving_reason'), 'moving', ['reason'], unique=False)
    op.create_table('owner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('yurik', sa.String(length=511), nullable=False),
    sa.Column('fizik', sa.String(length=511), nullable=False),
    sa.Column('fio', sa.String(length=61), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('catching',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('act', sa.String(length=63), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('district', sa.String(length=31), nullable=False),
    sa.Column('act1', sa.String(length=63), nullable=False),
    sa.Column('address', sa.String(length=127), nullable=False),
    sa.Column('animal', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['animal'], ['animal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_catching_act'), 'catching', ['act'], unique=False)
    op.create_index(op.f('ix_catching_act1'), 'catching', ['act1'], unique=False)
    op.create_index(op.f('ix_catching_address'), 'catching', ['address'], unique=False)
    op.create_index(op.f('ix_catching_date'), 'catching', ['date'], unique=False)
    op.create_index(op.f('ix_catching_district'), 'catching', ['district'], unique=False)
    op.add_column('animal', sa.Column('cell', sa.Integer(), nullable=False))
    op.add_column('animal', sa.Column('color', sa.String(length=31), nullable=False))
    op.add_column('animal', sa.Column('ears', sa.String(length=15), nullable=False))
    op.add_column('animal', sa.Column('fur', sa.String(length=15), nullable=False))
    op.add_column('animal', sa.Column('idcard', sa.String(length=15), nullable=False))
    op.add_column('animal', sa.Column('idmark', sa.String(length=31), nullable=False))
    op.add_column('animal', sa.Column('size', sa.String(length=15), nullable=False))
    op.add_column('animal', sa.Column('sterilized', sa.String(length=63), nullable=False))
    op.add_column('animal', sa.Column('tail', sa.String(length=15), nullable=False))
    op.add_column('animal', sa.Column('veterinarian', sa.String(length=63), nullable=False))
    op.add_column('animal', sa.Column('weight', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_animal_cell'), 'animal', ['cell'], unique=False)
    op.create_index(op.f('ix_animal_color'), 'animal', ['color'], unique=False)
    op.create_index(op.f('ix_animal_ears'), 'animal', ['ears'], unique=False)
    op.create_index(op.f('ix_animal_fur'), 'animal', ['fur'], unique=False)
    op.create_index(op.f('ix_animal_idcard'), 'animal', ['idcard'], unique=False)
    op.create_index(op.f('ix_animal_idmark'), 'animal', ['idmark'], unique=False)
    op.create_index(op.f('ix_animal_size'), 'animal', ['size'], unique=False)
    op.create_index(op.f('ix_animal_sterilized'), 'animal', ['sterilized'], unique=False)
    op.create_index(op.f('ix_animal_tail'), 'animal', ['tail'], unique=False)
    op.create_index(op.f('ix_animal_veterinarian'), 'animal', ['veterinarian'], unique=False)
    op.create_index(op.f('ix_animal_weight'), 'animal', ['weight'], unique=False)
    op.drop_index('ix_document_animal', table_name='document')
    op.drop_index('ix_document_document_type', table_name='document')
    op.create_foreign_key(None, 'document', 'animal', ['animal'], ['id'])
    op.create_foreign_key(None, 'document', 'document_type', ['document_type'], ['id'])
    op.add_column('shelter', sa.Column('animal', sa.Integer(), nullable=True))
    op.add_column('shelter', sa.Column('cares', sa.String(length=63), nullable=True))
    op.add_column('shelter', sa.Column('daddy', sa.String(length=127), nullable=True))
    op.add_column('shelter', sa.Column('director', sa.String(length=63), nullable=True))
    op.alter_column('shelter', 'address',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.create_index(op.f('ix_shelter_cares'), 'shelter', ['cares'], unique=False)
    op.create_index(op.f('ix_shelter_daddy'), 'shelter', ['daddy'], unique=False)
    op.create_index(op.f('ix_shelter_director'), 'shelter', ['director'], unique=False)
    op.drop_index('ix_shelter_adm_area', table_name='shelter')
    op.drop_index('ix_shelter_clarification_of_work', table_name='shelter')
    op.drop_index('ix_shelter_departmental_affiliation', table_name='shelter')
    op.drop_index('ix_shelter_district', table_name='shelter')
    op.drop_index('ix_shelter_global_id', table_name='shelter')
    op.create_foreign_key(None, 'shelter', 'animal', ['animal'], ['id'])
    op.drop_column('shelter', 'geo_data')
    op.drop_column('shelter', 'working_hours')
    op.drop_column('shelter', 'adm_area')
    op.drop_column('shelter', 'phone')
    op.drop_column('shelter', 'chief_name')
    op.drop_column('shelter', 'departmental_affiliation')
    op.drop_column('shelter', 'global_id')
    op.drop_column('shelter', 'name')
    op.drop_column('shelter', 'clarification_of_work')
    op.drop_column('shelter', 'district')
    op.create_foreign_key(None, 'users', 'role', ['role'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.add_column('shelter', sa.Column('district', mysql.VARCHAR(length=127), nullable=False))
    op.add_column('shelter', sa.Column('clarification_of_work', mysql.VARCHAR(length=511), nullable=True))
    op.add_column('shelter', sa.Column('name', mysql.VARCHAR(length=40), nullable=True))
    op.add_column('shelter', sa.Column('global_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
    op.add_column('shelter', sa.Column('departmental_affiliation', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
    op.add_column('shelter', sa.Column('chief_name', mysql.VARCHAR(length=127), nullable=False))
    op.add_column('shelter', sa.Column('phone', mysql.VARCHAR(length=15), nullable=False))
    op.add_column('shelter', sa.Column('adm_area', mysql.VARCHAR(length=255), nullable=False))
    op.add_column('shelter', sa.Column('working_hours', mysql.VARCHAR(length=511), nullable=False))
    op.add_column('shelter', sa.Column('geo_data', mysql.VARCHAR(length=255), nullable=False))
    op.drop_constraint(None, 'shelter', type_='foreignkey')
    op.create_index('ix_shelter_global_id', 'shelter', ['global_id'], unique=False)
    op.create_index('ix_shelter_district', 'shelter', ['district'], unique=False)
    op.create_index('ix_shelter_departmental_affiliation', 'shelter', ['departmental_affiliation'], unique=False)
    op.create_index('ix_shelter_clarification_of_work', 'shelter', ['clarification_of_work'], unique=False)
    op.create_index('ix_shelter_adm_area', 'shelter', ['adm_area'], unique=False)
    op.drop_index(op.f('ix_shelter_director'), table_name='shelter')
    op.drop_index(op.f('ix_shelter_daddy'), table_name='shelter')
    op.drop_index(op.f('ix_shelter_cares'), table_name='shelter')
    op.alter_column('shelter', 'address',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.drop_column('shelter', 'director')
    op.drop_column('shelter', 'daddy')
    op.drop_column('shelter', 'cares')
    op.drop_column('shelter', 'animal')
    op.drop_constraint(None, 'document', type_='foreignkey')
    op.drop_constraint(None, 'document', type_='foreignkey')
    op.create_index('ix_document_document_type', 'document', ['document_type'], unique=False)
    op.create_index('ix_document_animal', 'document', ['animal'], unique=False)
    op.drop_index(op.f('ix_animal_weight'), table_name='animal')
    op.drop_index(op.f('ix_animal_veterinarian'), table_name='animal')
    op.drop_index(op.f('ix_animal_tail'), table_name='animal')
    op.drop_index(op.f('ix_animal_sterilized'), table_name='animal')
    op.drop_index(op.f('ix_animal_size'), table_name='animal')
    op.drop_index(op.f('ix_animal_idmark'), table_name='animal')
    op.drop_index(op.f('ix_animal_idcard'), table_name='animal')
    op.drop_index(op.f('ix_animal_fur'), table_name='animal')
    op.drop_index(op.f('ix_animal_ears'), table_name='animal')
    op.drop_index(op.f('ix_animal_color'), table_name='animal')
    op.drop_index(op.f('ix_animal_cell'), table_name='animal')
    op.drop_column('animal', 'weight')
    op.drop_column('animal', 'veterinarian')
    op.drop_column('animal', 'tail')
    op.drop_column('animal', 'sterilized')
    op.drop_column('animal', 'size')
    op.drop_column('animal', 'idmark')
    op.drop_column('animal', 'idcard')
    op.drop_column('animal', 'fur')
    op.drop_column('animal', 'ears')
    op.drop_column('animal', 'color')
    op.drop_column('animal', 'cell')
    op.drop_index(op.f('ix_catching_district'), table_name='catching')
    op.drop_index(op.f('ix_catching_date'), table_name='catching')
    op.drop_index(op.f('ix_catching_address'), table_name='catching')
    op.drop_index(op.f('ix_catching_act1'), table_name='catching')
    op.drop_index(op.f('ix_catching_act'), table_name='catching')
    op.drop_table('catching')
    op.drop_table('owner')
    op.drop_index(op.f('ix_moving_reason'), table_name='moving')
    op.drop_index(op.f('ix_moving_date'), table_name='moving')
    op.drop_index(op.f('ix_moving_contract'), table_name='moving')
    op.drop_index(op.f('ix_moving_act'), table_name='moving')
    op.drop_table('moving')
    # ### end Alembic commands ###
